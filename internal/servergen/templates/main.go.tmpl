// Code generated by server-gen. DO NOT EDIT.
package {{.Service.ApiVersion}}

import (
	"context"
)

import (
{{- range .Imports}}
	{{if .Alias}}{{.Alias}} "{{.Path}}"{{else}}"{{.Path}}"{{end}}
{{- end}}
)

type service struct {
	{{.Service.UnimplementedServer}}
	logger *zap.Logger
}

func NewService(logger *zap.Logger) *service {
	return &service{
		logger: logger.Named("{{.Service.Name}}.{{.Service.ApiVersion}}"),
	}
}

{{range .Service.Calls}}func (s *service) {{.Name}}(ctx context.Context, req *{{.RequestType}}) (*{{.ResponseType}}, error) {
	logger := s.logger.With(zap.String("method", "{{.Name}}"), zap.Any("request", req))
	logger.Debug("request received")
{{- if eq .MethodType 1}}
	// standard create method
{{- end}}
	return nil, status.Error(codes.Unimplemented, "method not implemented")
}
{{- end}}
