syntax = "proto3";

package api.ke.v1alpha;

import "api/option/v1/options.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

option go_package = "github.com/nokamoto/2pf23/pkg/api/ke/v1alpha;kev1alpha";

// MachineType is a type of machine.
enum MachineType {
  MACHINE_TYPE_UNSPECIFIED = 0;
  MACHINE_TYPE_STANDARD = 1;
  MACHINE_TYPE_HIGHMEM = 2;
  MACHINE_TYPE_HIGHCPU = 3;
}

message Cluster {
  // The name of the cluster. This is used to identify the cluster in the API.
  // This is a read-only property.
  // The format is `projects/{project_id}/clusters/{cluster_id}`.
  string name = 1;
  // The display name of the cluster. This is used only for display purposes.
  string display_name = 2 [(api.option.v1.Resource.usage) = "The display name of the cluster."];
  // The number of worker nodes in the cluster.
  // If unspecified during cluster creation, the default value is 3.
  int32 num_nodes = 3 [(api.option.v1.Resource.usage) = "The number of worker nodes in the cluster."];
  // The type of machine.
  MachineType machine_type = 4 [(api.option.v1.Resource.usage) = "The type of machine."];
}

service KeService {
  rpc CreateCluster(CreateClusterRequest) returns (Cluster) {}
  rpc GetCluster(GetClusterRequest) returns (Cluster) {}
  rpc DeleteCluster(DeleteClusterRequest) returns (google.protobuf.Empty) {}
  rpc ListCluster(ListClusterRequest) returns (ListClusterResponse) {}
  rpc UpdateCluster(UpdateClusterRequest) returns (Cluster) {}
}

message CreateClusterRequest {
  Cluster cluster = 1;
}

message GetClusterRequest {
  string name = 1;
}

message DeleteClusterRequest {
  string name = 1;
}

message ListClusterRequest {
  int32 page_size = 1;
  string page_token = 2;
}

message ListClusterResponse {
  repeated Cluster clusters = 1;
  string next_page_token = 2;
}

message UpdateClusterRequest {
  Cluster cluster = 2;
  google.protobuf.FieldMask update_mask = 3;
}
